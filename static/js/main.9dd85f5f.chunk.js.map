{"version":3,"sources":["Components/Header/header.jsx","Components/Film/film.jsx","Components/TopFilms/topFilms.jsx","Redux/Actions/actions.js","Components/FilmDetails/filmDetails.jsx","Components/Search/search.jsx","Images/preloader.gif","Components/Preloader/preloader.jsx","App.js","Redux/Reducer/reducer.js","Redux/Store/store.js","index.js"],"names":["Header","className","Film","props","info","genres","useSelector","state","to","id","title","map","curr","genre_ids","includes","name","release_date","TopFilms","films","input","filtered","filter","toLowerCase","indexOf","length","GET_TOP_MOVIES_SUCCESS","GET_GENRES_SUCCESS","CHANGE_INPUT","TOGGLE_FETCHING_TYPE","GET_CURRENT_FILM_SUCCESS","axios","require","getTopMovies","url","dispatch","get","then","resp","setTimeout","newValue","toggleFetchingType","data","results","type","payload","getGenres","getCurrentFilm","FilmDetails","useParams","useDispatch","currFilm","useEffect","overview","popularity","budget","original_language","original_title","adult","Search","useState","value","setValue","placeholder","onChange","e","target","Preloader","src","preloader","alt","connect","isFetching","path","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dd85f5f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () =>\r\n    <div className={'header'} >\r\n        <u><h2>Top movies</h2></u>\r\n    </div>\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './film.css'\r\n\r\nconst Film = (props) => {\r\n    const { info } = props;\r\n    const genres = useSelector(state => state.genres);\r\n    return (\r\n        <div className='film-block' >\r\n            <Link to={'/film-details/' + info.id} className={'link'}> <h3>{info.title}</h3> </Link>\r\n\r\n            <div className={'genres'}>\r\n                <u><b>Genres:</b></u>\r\n                {genres.map(curr => info.genre_ids.includes(curr.id) ? <span key={curr.id}> {curr.name} </span> : null)}\r\n            </div>\r\n            <span><u><b>Release:</b></u> <span className={'release'}>{info.release_date}</span></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Film;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Film from '../Film/film';\r\nimport './topFilms.css';\r\n\r\nconst TopFilms = () => {\r\n    const films = useSelector(state => state.films);\r\n    const input = useSelector(state => state.input);\r\n    const filtered = films.filter(curr => {\r\n        if (input !== '') return curr.title.toLowerCase().indexOf(input.toLowerCase()) !== -1;\r\n        else return curr;\r\n    });\r\n    return (\r\n        <div className={'top-films'}>\r\n            {(filtered.length < 1 && films.length > 0)\r\n                ? <h2>No results!</h2>\r\n                : filtered.map(curr => <Film key={curr.id} info={curr} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopFilms;","export const GET_TOP_MOVIES_SUCCESS = 'GET_TOP_MOVIES_SUCCESS';\r\nexport const GET_GENRES_SUCCESS = 'GET_GENRES_SUCCESS';\r\nexport const CHANGE_INPUT = 'CHANGE_INPUT';\r\nexport const TOGGLE_FETCHING_TYPE = 'TOGGLE_FETCHING_TYPE';\r\nexport const GET_CURRENT_FILM_SUCCESS = 'GET_CURRENT_FILM_SUCCESS';\r\n\r\nconst axios = require('axios');\r\n\r\nconst getTopMoviesSuccess = (newValue) => {\r\n    return {\r\n        type: GET_TOP_MOVIES_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getTopMovies = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            setTimeout(() => {\r\n                dispatch(toggleFetchingType(false));\r\n                dispatch(getTopMoviesSuccess(resp.data.results));\r\n            }, 1500);\r\n        });\r\n    }\r\n}\r\n\r\nconst getGenresSuccess = (newValue) => {\r\n    return {\r\n        type: GET_GENRES_SUCCESS,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nexport const getGenres = (url) => {\r\n    return dispatch => {\r\n        axios.get(url).then(resp => {\r\n            setTimeout(() => {\r\n                dispatch(getGenresSuccess(resp.data.genres));\r\n            }, 1500);\r\n        });\r\n    }\r\n}\r\n\r\nexport const changeInput = (newValue) => {\r\n    return {\r\n        type: CHANGE_INPUT,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nconst toggleFetchingType = (newValue) => {\r\n    return {\r\n        type: TOGGLE_FETCHING_TYPE,\r\n        payload: newValue\r\n    }\r\n}\r\n\r\nconst getCurrentFilmSuccess = (newValue)=>{\r\n    return{\r\n        type:GET_CURRENT_FILM_SUCCESS,\r\n        payload:newValue\r\n    }\r\n}\r\n\r\nexport const getCurrentFilm = (url)=>{\r\n    return dispatch => {\r\n        axios.get(url).then(resp => dispatch(getCurrentFilmSuccess(resp.data)));\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentFilm } from '../../Redux/Actions/actions';\r\nimport './filmDetails.css';\r\n\r\nconst FilmDetails = () => {\r\n    let { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const currFilm = useSelector(state => state.currFilm);\r\n    useEffect(\r\n        () => {\r\n            dispatch(getCurrentFilm(`https://api.themoviedb.org/3/movie/${id}?api_key=fe2b789126975f247fd48c25cd192e83&language=en-US`));\r\n        }, []\r\n    )\r\n    return (\r\n        <>\r\n            <div className={'curr-film '}>\r\n                <h2>{currFilm?.title}</h2>\r\n                <p>{currFilm?.overview}</p>\r\n                <span>Popularity: {currFilm?.popularity}</span>\r\n                <span>Budget: {currFilm?.budget} $</span>\r\n                <span>Original language: {currFilm?.original_language}</span>\r\n                <span>Original title: {currFilm?.original_title}</span>\r\n                <span>Adult: {(currFilm?.adult) ? '18+' : '---'}</span>\r\n            </div>\r\n            <Link className={'link_back'} to='/'> Go back to the list </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilmDetails;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeInput } from '../../Redux/Actions/actions';\r\nimport './search.css';\r\n\r\nconst Search = () => {\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const changeValue = (e) => {\r\n        setValue(e.target.value);\r\n        dispatch(changeInput(e.target.value))\r\n    }\r\n    return (\r\n        <div className={'search'}>\r\n            <input type=\"text\" placeholder=\"Search...\" value={value} onChange={changeValue} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","export default __webpack_public_path__ + \"static/media/preloader.ff7d63b8.gif\";","import React from 'react';\r\nimport preloader from './../../Images/preloader.gif';\r\n\r\nconst Preloader = ()=>{\r\n    return(\r\n        <div >\r\n            <img src={preloader} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport Header from './Components/Header/header';\nimport TopFilms from './Components/TopFilms/topFilms';\nimport FilmDetails from './Components/FilmDetails/filmDetails';\nimport Search from './Components/Search/search';\nimport { getGenres, getTopMovies } from './Redux/Actions/actions';\nimport Preloader from './Components/Preloader/preloader';\n\nimport './app.css';\n\n\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const isFetching = useSelector(state => state.isFetching);\n\n  useEffect(\n    () => {\n      dispatch(getTopMovies('https://api.themoviedb.org/3/movie/popular?api_key=fe2b789126975f247fd48c25cd192e83&language=en-US&page=1'));\n      dispatch(getGenres(\"https://api.themoviedb.org/3/genre/movie/list?api_key=fe2b789126975f247fd48c25cd192e83&language=en-US\"));\n    }, []\n  )\n  return (\n    <div className={\"app\"}>\n      <Switch>\n        <Route path=\"/film-details/:id\">\n          <FilmDetails />\n        </Route>\n        <Route path=\"/\">\n          <div className={'left-side'}>\n            <Header />\n            <Search />\n          </div>\n          <div className=\"right-side\">\n            {isFetching ? <Preloader /> : null}\n            <TopFilms />\n          </div>\n        </Route>\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default connect()(App);","import { GET_TOP_MOVIES_SUCCESS, GET_GENRES_SUCCESS, CHANGE_INPUT, TOGGLE_FETCHING_TYPE, GET_CURRENT_FILM_SUCCESS } from '../Actions/actions';\r\n\r\nlet initialState = {\r\n    films: [],\r\n    genres: [],\r\n    input: '',\r\n    isFetching: true,\r\n    currFilm: null\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TOP_MOVIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                films: [...state.films, ...action.payload]\r\n            }\r\n        case GET_GENRES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                genres: [...state.genres, ...action.payload]\r\n            }\r\n        case CHANGE_INPUT:\r\n            return {\r\n                ...state,\r\n                input: action.payload\r\n            }\r\n        case TOGGLE_FETCHING_TYPE:\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload\r\n            }\r\n        case GET_CURRENT_FILM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currFilm: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducer } from '../Reducer/reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/Store/store';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}